#!/bin/bash
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
if [ "$(uname)" == "Darwin" ]; then
    export MACHINE_OS="OSX"
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    export MACHINE_OS="LINUX"
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
    export MACHINE_OS="WIN32"
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW64_NT" ]; then
    export MACHINE_OS="WIN64"
fi
filename=$(uuidgen)
if [ $MACHINE_OS == "OSX" ]; then
    echo $NITRO_PIPELINES_GLOBAL_VARIABLES_BASE64 | base64 --decode > ./$filename.tmp && envsubst < ./$filename.tmp > ./$filename.env && rm ./$filename.tmp
else
    echo $NITRO_PIPELINES_GLOBAL_VARIABLES_BASE64 | base64 -di > ./$filename.tmp && envsubst < ./$filename.tmp > ./$filename.env && rm ./$filename.tmp
fi
if [ -s ./$filename.env  ]; then
	source ./$filename.env && export $(cut -d= -f1 ./$filename.env)
    rm -f ./$filename.env
else
	echo "File ./$filename.env is empty"
    exit 1
fi
if [ -z "$1" ]; then
    echo "No required arguments supplied (operation=any|build|deploy, ms_name)."
    exit 1
fi
cwd=$(dirname "$0")
$SCRIPT_DIR/nitro $1 $2
if [[ $? -ne 0 ]]; then exit 1;fi
if [ $1 = "build" ]; then
    if [ -z "$2" ]; then
        echo "No required arguments supplied (operation=any|build|deploy, ms_name)."
        exit
    else
        echo $2
        declare script_name="$SCRIPT_DIR/nitro-$2-build.sh"
        if test -f $script_name; then
            source $script_name
        else
            $script_name = dx
            echo "File $script_name doesn't exists."
        fi
    fi
else
    script_name="./nitro-deploy.sh"
    if test -f $script_name; then
        source $script_name
    else
        echo "File $script_name doesn't exists."
    fi
fi