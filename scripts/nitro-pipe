#!/bin/bash
filename=$(uuidgen)
echo "********************************"
echo `echo $VARA | base64 --decode`
echo "********************************"
exit 1
echo `echo $VARA | base64 --decode` >> ./$filename.tmp && envsubst < ./$filename.tmp > ./$filename.env #&& rm ./$filename.tmp
if [ -s ./$filename.env  ]; then
    export $(cut -d= -f1 ./$filename.env)
    exit_code=$? && if [ $exit_code -ne 0 ]; then exit $exit_code; fi
    echo "********************************"
    echo `echo $VARA | base64 --decode`
    echo "********************************"
    echo "********************************"
    cat ./$filename.tmp
    echo "********************************"
    echo "********************************"
    cat ./$filename.env
    echo "********************************"
    echo $NITRO_PIPELINES_TARGET_AWS_REGION
    echo $NITRO_PIPELINES_TARGET_AWS_ACCESS_KEY
    echo "********************************"
    rm -f ./$filename.env
else
	echo "File ./$filename.env is empty"
    exit 1
fi
if [ -z "$1" ]; then
    echo "No required arguments supplied (operation=any|build|deploy, ms_name)."
    exit 1
fi
cwd=$(dirname "$0")
./nitro $1 $2
if [[ $? -ne 0 ]]; then exit 1;fi
if [ $1 = "build" ]; then
    if [ -z "$2" ]; then
        echo "No required arguments supplied (operation=any|build|deploy, ms_name)."
        exit
    else
        echo $2
        declare script_name="./nitro-$2-build.sh"
        if test -f $script_name; then
            source $script_name
        else
            $script_name = dx
            echo "File $script_name doesn't exists."
        fi
    fi
else
    script_name="./nitro-deploy.sh"
    if test -f $script_name; then
        source $script_name
    else
        echo "File $script_name doesn't exists."
    fi
fi